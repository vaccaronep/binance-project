version: '3'
services:
  gateway:
    container_name: "api-gateway"
    build: ./binance-api-gateway
    restart: always
    hostname: gateway
    env_file:
      - ./binance-api-gateway/.env
    ports:
      - "8000:8000"
    depends_on:
      - redis
    networks:
      - backend
      - frontend
  orders:
    container_name: "orders-api"
    build: ./orders-microservice
    restart: always
    hostname: orders
    env_file:
      - ./orders-microservice/.env
    networks:
      - backend
    depends_on:
      - redis
      - dborders
  account:
    container_name: "account-api"
    build: ./account-microservice
    restart: always
    hostname: account
    env_file:
      - ./account-microservice/.env
    networks:
      - backend
    depends_on:
      - redis
      - dbconfigs
  rules:
    container_name: "rules-api"
    build: ./rules-microservice
    restart: always
    hostname: rules
    env_file:
      - ./rules-microservice/.env
    networks:
      - backend
    depends_on:
      - dbrules
  users:
    container_name: "users-api"
    build: ./users-microservice
    restart: always
    hostname: users
    env_file:
      - ./users-microservice/.env
    networks:
      - backend
    depends_on:
      - redis
      - dbusers
  identity:
    container_name: "identity-api"
    build: ./identity-microservice
    restart: always
    hostname: identity
    env_file:
      - ./identity-microservice/.env
    networks:
      - backend
    links:
      - dbaccount
  permissions:
    container_name: "permissions-api"
    build: ./permissions-microservice
    restart: always
    hostname: identity
    env_file:
      - ./permissions-microservice/.env
    networks:
      - backend
  dbusers:
    container_name: db-users
    image: 'mongo:3.7'
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpw
      MONGO_INITDB_DATABASE: dbusers
      MONGO_USER: u2
      MONGO_PASSWORD: somepw
    env_file:
      - ./users-microservice/.env
    volumes:
      - "./db-users/data/db-files:/data/db"
      - "./db-users/init/:/docker-entrypoint-initdb.d/"
    ports:
      - 27017:27017
    networks:
      - backend
  dbrules:
    container_name: db-rules
    image: 'mongo:3.7'
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpw
      MONGO_INITDB_DATABASE: dbrules
      MONGO_USER: u1
      MONGO_PASSWORD: somepw
    env_file:
      - ./rules-microservice/.env
    volumes:
      - "./db-rules/data/db-files:/data/db"
      - "./db-rules/init/:/docker-entrypoint-initdb.d/"
    ports:
      - 27020:27017
    networks:
      - backend
  dborders:
    image: 'mongo:3.7'
    container_name: db-orders
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpw
      MONGO_INITDB_DATABASE: dborders
      MONGO_USER: u1
      MONGO_PASSWORD: somepw
    env_file:
      - ./orders-microservice/.env
    volumes:
      - "./db-orders/data/db-files:/data/db"
      - "./db-orders/init/:/docker-entrypoint-initdb.d/"
    ports:
      - 27018:27017
    networks:
      - backend
  dbconfigs:
    image: 'mongo:3.7'
    container_name: db-configs
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpw
      MONGO_INITDB_DATABASE: dbconfigs
      MONGO_USER: u1
      MONGO_PASSWORD: somepw
    env_file:
      - ./account-microservice/.env
    volumes:
      - "./db-configs/data/db-files:/data/db"
      - "./db-configs/init/:/docker-entrypoint-initdb.d/"
    ports:
      - 27021:27017
    networks:
      - backend
  dbaccount:
    image: 'mongo:3.7'
    container_name: db-account
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpw
      MONGO_INITDB_DATABASE: dbaccount
      MONGO_USER: u1
      MONGO_PASSWORD: somepw
    volumes:
      - "./db-account/data/db-files:/data/db"
      - "./db-account/init/:/docker-entrypoint-initdb.d/"
    ports:
      - 27019:27017
    networks:
      - backend
  redis:
    image: redis:3
    restart: always
    container_name: redis
    ports:
      - 6379:6379
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - ./redis:/data
networks:
  backend:
    driver: bridge
  frontend:
    external:
      name: infrastructure