version: '3'
services:
  gateway:
    container_name: "api-gateway"
    build: ./binance-api-gateway
    restart: always
    hostname: gateway
    env_file:
      - ./binance-api-gateway/.env
    ports:
      - "8000:8000"
    depends_on:
      - redis
    networks:
      - backend
      - frontend
  orders:
    container_name: "orders-api"
    build: ./orders-microservice
    restart: always
    hostname: orders
    env_file:
      - ./orders-microservice/.env
    networks:
      - backend
      - orders-backend
    depends_on:
      - redis
    links:
      - db-orders
  users:
    container_name: "users-api"
    build: ./users-microservice
    restart: always
    hostname: users
    env_file:
      - ./users-microservice/.env
    networks:
      - backend
      - users-backend
    depends_on:
      - redis
    links:
      - db-users
  identity:
    build: ./identity-microservice
    restart: always
    hostname: identity
    env_file:
      - ./identity-microservice/.env
    networks:
      - backend
    links:
      - db-account
  account:
    build: ./account-microservice
    restart: always
    hostname: account
    env_file:
      - ./account-microservice/.env
    networks:
      - backend
      - account-backend
  db-users:
    container_name: db-users
    image: 'mongo:3.7'
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
    env_file:
      - ./users-microservice/.env
    volumes:
      - "./db-users/data/db-files:/data/db"
      - "./db-users/init/:/docker-entrypoint-initdb.d/"
    ports:
      - 27017:27017
    networks:
      - users-backend
  db-orders:
    image: 'mongo:3.7'
    container_name: db-orders
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
    env_file:
      - ./orders-microservice/.env
    volumes:
      - "./db-orders/data/db-files:/data/db"
      - "./db-orders/init/:/docker-entrypoint-initdb.d/"
    ports:
      - 27018:27017
    networks:
      - orders-backend
  db-account:
    image: 'mongo:3.7'
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - "./db-account/data/db-files:/data/db"
      - "./db-account/init/:/docker-entrypoint-initdb.d/"
    ports:
      - 27019:27017
    networks:
      - account-backend
  redis:
    image: redis:3
    restart: always
    container_name: redis
    ports:
      - 6379:6379
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - ./redis:/data
networks:
  backend:
    driver: bridge
  users-backend:
    driver: bridge
  orders-backend:
    driver: bridge
  account-backend:
    driver: bridge
  frontend:
    external:
      name: infrastructure